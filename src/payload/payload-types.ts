/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Nav".
 */
export type Nav =
  | {
      label: string;
      type?: ('submenu' | 'link') | null;
      items?: Nav;
      link?: NavLinkItem;
      id?: string | null;
    }[]
  | null;

export interface Config {
  auth: {
    admins: AdminAuthOperations;
  };
  collections: {
    pages: Page;
    media: Media;
    posts: Post;
    tags: Tag;
    projects: Project;
    admins: Admin;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    tags: TagsSelect<false> | TagsSelect<true>;
    projects: ProjectsSelect<false> | ProjectsSelect<true>;
    admins: AdminsSelect<false> | AdminsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    siteConfig: SiteConfig;
  };
  globalsSelect: {
    siteConfig: SiteConfigSelect<false> | SiteConfigSelect<true>;
  };
  locale: 'en';
  user: Admin & {
    collection: 'admins';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface AdminAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  internalTitle?: string | null;
  title: string;
  showTitle?: boolean | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  seo?: SeoField;
  routing: Routing;
  parent?: (string | null) | Page;
  breadcrumbs?:
    | {
        doc?: (string | null) | Page;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  breadcrumbLabelFields?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SeoField".
 */
export interface SeoField {
  title?: string | null;
  description?: string | null;
  image?: (string | null) | Media;
  generated?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  internalTitle?: string | null;
  alt?: string | null;
  source?: string | null;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Routing".
 */
export interface Routing {
  slug?: {
    value?: string | null;
    auto?: boolean | null;
  };
  internalPath?: string | null;
  path: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  internalTitle?: string | null;
  publishedAt?: string | null;
  title: string;
  intro?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  poster?: (string | null) | Media;
  tags?: (string | Tag)[] | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  seo?: SeoField;
  routing: Routing;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: string;
  internalTitle?: string | null;
  title: string;
  seo?: SeoField;
  routing: Routing;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: string;
  internalTitle?: string | null;
  name: string;
  image?: (string | null) | Media;
  url?: string | null;
  featured?: boolean | null;
  shortDescription?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  seo?: SeoField;
  routing: Routing;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admins".
 */
export interface Admin {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'tags';
        value: string | Tag;
      } | null)
    | ({
        relationTo: 'projects';
        value: string | Project;
      } | null)
    | ({
        relationTo: 'admins';
        value: string | Admin;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'admins';
    value: string | Admin;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'admins';
    value: string | Admin;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  internalTitle?: T;
  title?: T;
  showTitle?: T;
  content?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        generated?:
          | T
          | {
              title?: T;
              description?: T;
              image?: T;
            };
      };
  routing?:
    | T
    | {
        slug?:
          | T
          | {
              value?: T;
              auto?: T;
            };
        internalPath?: T;
        path?: T;
      };
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  breadcrumbLabelFields?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  internalTitle?: T;
  alt?: T;
  source?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  internalTitle?: T;
  publishedAt?: T;
  title?: T;
  intro?: T;
  poster?: T;
  tags?: T;
  content?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        generated?:
          | T
          | {
              title?: T;
              description?: T;
              image?: T;
            };
      };
  routing?:
    | T
    | {
        slug?:
          | T
          | {
              value?: T;
              auto?: T;
            };
        internalPath?: T;
        path?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
  internalTitle?: T;
  title?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        generated?:
          | T
          | {
              title?: T;
              description?: T;
              image?: T;
            };
      };
  routing?:
    | T
    | {
        slug?:
          | T
          | {
              value?: T;
              auto?: T;
            };
        internalPath?: T;
        path?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects_select".
 */
export interface ProjectsSelect<T extends boolean = true> {
  internalTitle?: T;
  name?: T;
  image?: T;
  url?: T;
  featured?: T;
  shortDescription?: T;
  description?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        generated?:
          | T
          | {
              title?: T;
              description?: T;
              image?: T;
            };
      };
  routing?:
    | T
    | {
        slug?:
          | T
          | {
              value?: T;
              auto?: T;
            };
        internalPath?: T;
        path?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admins_select".
 */
export interface AdminsSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "siteConfig".
 */
export interface SiteConfig {
  id: string;
  general: {
    title: string;
    baseUrl?: string | null;
  };
  nav?: {
    main?: Nav;
    footer?: Nav;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NavLinkItem".
 */
export interface NavLinkItem {
  linkType: 'custom' | 'internal';
  url?: string | null;
  doc?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'tags';
        value: string | Tag;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'projects';
        value: string | Project;
      } | null);
  newTab?: boolean | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "siteConfig_select".
 */
export interface SiteConfigSelect<T extends boolean = true> {
  general?:
    | T
    | {
        title?: T;
        baseUrl?: T;
      };
  nav?:
    | T
    | {
        main?:
          | T
          | {
              label?: T;
              link?:
                | T
                | {
                    linkType?: T;
                    url?: T;
                    doc?: T;
                    newTab?: T;
                  };
              id?: T;
            };
        footer?:
          | T
          | {
              label?: T;
              type?: T;
              items?:
                | T
                | {
                    label?: T;
                    link?:
                      | T
                      | {
                          linkType?: T;
                          url?: T;
                          doc?: T;
                          newTab?: T;
                        };
                    id?: T;
                  };
              link?:
                | T
                | {
                    linkType?: T;
                    url?: T;
                    doc?: T;
                    newTab?: T;
                  };
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language:
    | 'plaintext'
    | 'typescript'
    | 'javascript'
    | 'php'
    | 'dart'
    | 'yaml'
    | 'shell'
    | 'css'
    | 'html'
    | '1c'
    | 'abnf'
    | 'accesslog'
    | 'actionscript'
    | 'ada'
    | 'angelscript'
    | 'apache'
    | 'applescript'
    | 'arcade'
    | 'arduino'
    | 'armasm'
    | 'xml'
    | 'asciidoc'
    | 'aspectj'
    | 'autohotkey'
    | 'autoit'
    | 'avrasm'
    | 'awk'
    | 'axapta'
    | 'bash'
    | 'basic'
    | 'bnf'
    | 'brainfuck'
    | 'c'
    | 'cal'
    | 'capnproto'
    | 'ceylon'
    | 'clean'
    | 'clojure'
    | 'clojure-repl'
    | 'cmake'
    | 'coffeescript'
    | 'coq'
    | 'cos'
    | 'cpp'
    | 'crmsh'
    | 'crystal'
    | 'csharp'
    | 'csp'
    | 'd'
    | 'markdown'
    | 'delphi'
    | 'diff'
    | 'django'
    | 'dns'
    | 'dockerfile'
    | 'dos'
    | 'dsconfig'
    | 'dts'
    | 'dust'
    | 'ebnf'
    | 'elixir'
    | 'elm'
    | 'ruby'
    | 'erb'
    | 'erlang-repl'
    | 'erlang'
    | 'excel'
    | 'fix'
    | 'flix'
    | 'fortran'
    | 'fsharp'
    | 'gams'
    | 'gauss'
    | 'gcode'
    | 'gherkin'
    | 'glsl'
    | 'gml'
    | 'go'
    | 'golo'
    | 'gradle'
    | 'graphql'
    | 'groovy'
    | 'haml'
    | 'handlebars'
    | 'haskell'
    | 'haxe'
    | 'hsp'
    | 'http'
    | 'hy'
    | 'inform7'
    | 'ini'
    | 'irpf90'
    | 'isbl'
    | 'java'
    | 'jboss-cli'
    | 'json'
    | 'julia'
    | 'julia-repl'
    | 'kotlin'
    | 'lasso'
    | 'latex'
    | 'ldif'
    | 'leaf'
    | 'less'
    | 'lisp'
    | 'livecodeserver'
    | 'livescript'
    | 'llvm'
    | 'lsl'
    | 'lua'
    | 'makefile'
    | 'mathematica'
    | 'matlab'
    | 'maxima'
    | 'mel'
    | 'mercury'
    | 'mipsasm'
    | 'mizar'
    | 'perl'
    | 'mojolicious'
    | 'monkey'
    | 'moonscript'
    | 'n1ql'
    | 'nestedtext'
    | 'nginx'
    | 'nim'
    | 'nix'
    | 'node-repl'
    | 'nsis'
    | 'objectivec'
    | 'ocaml'
    | 'openscad'
    | 'oxygene'
    | 'parser3'
    | 'pf'
    | 'pgsql'
    | 'php-template'
    | 'pony'
    | 'powershell'
    | 'processing'
    | 'profile'
    | 'prolog'
    | 'properties'
    | 'protobuf'
    | 'puppet'
    | 'purebasic'
    | 'python'
    | 'python-repl'
    | 'q'
    | 'qml'
    | 'r'
    | 'reasonml'
    | 'rib'
    | 'roboconf'
    | 'routeros'
    | 'rsl'
    | 'ruleslanguage'
    | 'rust'
    | 'sas'
    | 'scala'
    | 'scheme'
    | 'scilab'
    | 'scss'
    | 'smali'
    | 'smalltalk'
    | 'sml'
    | 'sqf'
    | 'sql'
    | 'stan'
    | 'stata'
    | 'step21'
    | 'stylus'
    | 'subunit'
    | 'swift'
    | 'taggerscript'
    | 'tap'
    | 'tcl'
    | 'thrift'
    | 'tp'
    | 'twig'
    | 'vala'
    | 'vbnet'
    | 'vbscript'
    | 'vbscript-html'
    | 'verilog'
    | 'vhdl'
    | 'vim'
    | 'wasm'
    | 'wren'
    | 'x86asm'
    | 'xl'
    | 'xquery'
    | 'zephir';
  code?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkField".
 */
export interface LinkField {
  linkType: 'custom' | 'internal';
  url?: string | null;
  doc?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'tags';
        value: string | Tag;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'projects';
        value: string | Project;
      } | null);
  newTab?: boolean | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LatestPostsBlock".
 */
export interface LatestPostsBlock {
  postCount: number;
  withBlogLink?: boolean | null;
  blogPage?: LinkField;
  id?: string | null;
  blockName?: string | null;
  blockType: 'latestPosts';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CalloutBlock".
 */
export interface CalloutBlock {
  type?: ('neutral' | 'info') | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'callout';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}